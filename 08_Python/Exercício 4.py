# -*- coding: utf-8 -*-
"""Exercício 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bfxFvOFdubnRlqqMjadT64gg5cKGyP5i
"""

from abc import ABC, abstractmethod

class Cibernetico(ABC):
  @abstractmethod
  def realizar_hack(self):
    pass

class Implante:
  def __init__(self, custo: float, funcao: str):
    self.__custo = custo
    self.__funcao = funcao

  def __str__(self):
    return f"Implante de {self.__funcao} (Custo: {self.__custo} créditos)"

class NetRunner(Cibernetico):
  def __init__(self, nome: str, implante: Implante):
    self.__nome = nome
    self.__implante = implante

  def realizar_hack(self):
    print(f"{self.__nome} está realizando um hack com {self.__implante}.")

class Faccao:
  def __init__(self, nome: str, membros: list):
    self.__nome = nome
    self.__membros = membros

  def hack_em_massa(self):
      print(f"\nFacção {self.__nome} iniciou um ataque!")
      for membro in self.__membros:
          membro.realizar_hack()

if __name__ == "__main__":
  implante_1 = Implante(5000, "controle mental")
  implante_2 = Implante(7500, "invasão de sistemas")
  implante_3 = Implante(6000, "camuflagem digital")

  runner1 = NetRunner("Runner1", implante_1)
  runner2 = NetRunner("Runner2", implante_2)
  runner3 = NetRunner("Runner3", implante_3)

  membros = [runner1, runner2, runner3]
  faccao = Faccao("SOMBRA", membros)

  faccao.hack_em_massa()